// <auto-generated />
using System;
using Solution.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArbitraX.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Loader.Core.Entities.Coin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NAME");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SYMBOL");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("COINS", (string)null);
                });

            modelBuilder.Entity("Loader.Core.Entities.CoinNetwork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CoinId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NetworkId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NetworkId1")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("NetworkId1");

                    b.ToTable("COINS_NETWORKS", (string)null);
                });

            modelBuilder.Entity("Loader.Core.Entities.Exchange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("EXCHANGES", (string)null);
                });

            modelBuilder.Entity("Loader.Core.Entities.Network", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("NETWORKS", (string)null);
                });

            modelBuilder.Entity("Loader.Core.Entities.OrderBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<double>("Amount")
                        .HasColumnType("double")
                        .HasColumnName("AMOUNT");

                    b.Property<short>("Side")
                        .HasColumnType("smallint")
                        .HasColumnName("SIDE");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SYMBOL");

                    b.Property<double>("Value")
                        .HasColumnType("double")
                        .HasColumnName("VALUE");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ORDER_BOOKS", (string)null);
                });

            modelBuilder.Entity("Loader.Core.Entities.CoinNetwork", b =>
                {
                    b.HasOne("Loader.Core.Entities.Coin", "Coin")
                        .WithMany("CoinNetworks")
                        .HasForeignKey("CoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loader.Core.Entities.Network", null)
                        .WithMany("CoinNetworks")
                        .HasForeignKey("NetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loader.Core.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coin");

                    b.Navigation("Network");
                });

            modelBuilder.Entity("Loader.Core.Entities.Coin", b =>
                {
                    b.Navigation("CoinNetworks");
                });

            modelBuilder.Entity("Loader.Core.Entities.Network", b =>
                {
                    b.Navigation("CoinNetworks");
                });
#pragma warning restore 612, 618
        }
    }
}
